{"version":3,"sources":["D:/Personal/Supriya/workspace/DelPrepApp/src/$_lazy_route_resource lazy","D:/Personal/Supriya/workspace/DelPrepApp/src/app/about/about.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/about/about.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/about/about.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.module.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/login-success/login-success.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/login-success/login-success.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/login-success/login-success.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/login/login.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/login/login.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/login/login.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/logout/logout.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/logout/logout.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/logout/logout.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/startpage/startpage.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/startpage/startpage.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/startpage/startpage.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/app/vehicle-prep/vehicle-prep.component.css","D:/Personal/Supriya/workspace/DelPrepApp/src/app/vehicle-prep/vehicle-prep.component.html","D:/Personal/Supriya/workspace/DelPrepApp/src/app/vehicle-prep/vehicle-prep.component.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/environments/environment.ts","D:/Personal/Supriya/workspace/DelPrepApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/about/about.component.css\n// module id = ../../../../../src/app/about/about.component.css\n// module chunks = main","module.exports = \"<mat-toolbar>\\n    <i class=\\\"fa fa-arrow-left\\\" (click)=\\\"backClicked()\\\"></i>\\n      <span style=\\\"margin-left: 20px;\\\">About</span>\\n    </mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/about/about.component.html\n// module id = ../../../../../src/app/about/about.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common'\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor(private loc:Location) { }\n\n  ngOnInit() {\n  }\n\n  backClicked(){\n    this.loc.back();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/about/about.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content {\\r\\n    background-color:white;\\r\\n    height:75vh;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n    position: relative;\\r\\n    bottom: 0px;\\r\\n    background-color:white;\\r\\n\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet> </router-outlet>\\n<mat-toolbar class=\\\"footer\\\" style=\\\"background-color:rgb(48, 46, 46);color:white;margin-top:10px;height:120px; font-size:10px;\\\">\\n    Avis Budget Group @copyrights<br>\\n    Since 2003<br>\\n    United States of America\\n</mat-toolbar>    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {Location} from '@angular/common'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  back:boolean=false;\nconstructor(private router: Router,private loc:Location) { }\nlogin(){\nthis.back=true;\n  }\n\n  backClicked() {\n    this.back=false;\n    this.loc.back();\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MatIconModule} from '@angular/material/icon';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AboutComponent } from './about/about.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StartpageComponent } from './startpage/startpage.component';\nimport { LoginSuccessComponent } from './login-success/login-success.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule }  from '@angular/material/input';\nimport { VehiclePrepComponent } from './vehicle-prep/vehicle-prep.component'\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LogoutComponent,\n    AboutComponent,\n    StartpageComponent,\n    LoginSuccessComponent,\n    VehiclePrepComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([\n      { path:'login', component: LoginComponent },\n      { path:'home', component: AppComponent },\n      { path:'logout', component: StartpageComponent },\n      { path:'about', component: AboutComponent },\n      { path:'loginsuccess', component: LoginSuccessComponent },\n      { path:'vehicleprep', component: VehiclePrepComponent },\n      { path:'', component: StartpageComponent }\n      \n    ], // <-- debugging purposes only\n    ),\n    MatIconModule,\n    MatButtonModule,\n    FormsModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatDialogModule,\n  \n    \n    \n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/login-success/login-success.component.css\n// module id = ../../../../../src/app/login-success/login-success.component.css\n// module chunks = main","module.exports = \"<p>\\n  login-success works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/login-success/login-success.component.html\n// module id = ../../../../../src/app/login-success/login-success.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-success',\n  templateUrl: './login-success.component.html',\n  styleUrls: ['./login-success.component.css']\n})\nexport class LoginSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/login-success/login-success.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\r\\n    display: inline-block;\\r\\n    -webkit-box-orient: horizontal;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: row;\\r\\n            flex-direction: row;\\r\\n    padding:20px;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n    \\r\\n  }\\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<mat-toolbar>\\n    <i class=\\\"fa fa-arrow-left align-left\\\" (click)=\\\"  backClicked()\\\"></i>\\n      <span style=\\\"margin-left: 20px;\\\">Welcome to Prep App</span>\\n    </mat-toolbar>\\n    \\n<div class=\\\"example-container\\\">\\n    <mat-toolbar>\\n        <span style=\\\"margin-left: 20px;\\\">Sign In</span>\\n      </mat-toolbar>\\n      <br>\\n  <mat-form-field>\\n    <input  [(ngModel)]=\\\"user\\\" type=\\\"text\\\" matInput placeholder=\\\"Username\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n  </mat-form-field>\\n  \\n  <mat-form-field>\\n    <input [(ngModel)]=\\\"pass\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n  </mat-form-field>\\n<br>\\n  <span style=\\\"color:red;\\\">{{invalid}}</span>\\n  <br><br>\\n  <button mat-button\\t(click)=\\\"login()\\\" style=\\\"background-color: rgb(0, 255, 13);color:white;height:50px; width:120px;\\\"><b>Login</b></button>\\n  <br>\\n  <br>\\n  <br>\\n  <div>\\n  <a href=\\\"/login\\\">Forget Password</a><br><br>\\n  <a href=\\\"/login\\\"> New user ? Sign Up Details</a>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  invalid:string=\"\";\n  user:string=\"\";\n  pass:string=\"\";\n  constructor(private router:Router,private loc:Location,public snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit() {\n  }\n\n  login(){\n    if(this.user==\"abc\" && this.pass==\"abc\")\n    {\n      this.router.navigateByUrl(\"/vehicleprep\");\n      this.openSnackBar(\"Welcome\",\"Successfully Logged In\");\n    }\n    else{\n    this.invalid=\"Invalid Username or Password\"\n    this.openSnackBar(\"Sorry\",\"Invalid Credentials\");\n  }\n  }\n\n  backClicked() {\n    this.loc.back();\n}\n\nopenSnackBar(message: string, action: string) {\n  this.snackBar.open(message, action, {\n    duration: 2000,\n  });\n}\n}\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/logout/logout.component.css\n// module id = ../../../../../src/app/logout/logout.component.css\n// module chunks = main","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/logout/logout.component.html\n// module id = ../../../../../src/app/logout/logout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/logout/logout.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/startpage/startpage.component.css\n// module id = ../../../../../src/app/startpage/startpage.component.css\n// module chunks = main","module.exports = \"<div>\\n<mat-sidenav-container >\\n\\n    <mat-sidenav #sidenav mode=\\\"push\\\" opened=\\\"false\\\"  style=\\\"width:35%; color:rgb(255, 0, 0);\\\">\\n     <div style=\\\"text-align: center;\\\"> <br>\\n      <i class=\\\"fa fa-home \\\" style=\\\"font-size:70px;\\\" routerLink=\\\"/\\\" (click)=\\\"sidenav.toggle()\\\"></i><br><br>\\n      <div> \\n        <button mat-button  routerLink=\\\"/login\\\" type=\\\"button\\\" class=\\\"btn-block\\\"  (click)=\\\"sidenav.toggle();\\\">Login</button><br>\\n        <button mat-button routerLink=\\\"/about\\\" type=\\\"button\\\" class=\\\"btn-block\\\"  (click)=\\\"sidenav.toggle();\\\">About</button>\\n      </div>\\n      </div>\\n    </mat-sidenav>\\n  \\n    <mat-toolbar>\\n      <i class=\\\"fa fa-bars\\\" (click)=\\\"sidenav.toggle()\\\"></i>\\n        <span style=\\\"margin-left: 20px;\\\">Vehicle Deletion Prep</span>\\n    </mat-toolbar>\\n  \\n\\n  <div style=\\\"width:100%;\\\">\\n  <img src=\\\"./assets/car.gif\\\" width=\\\"100%\\\">\\n  </div>\\n</mat-sidenav-container>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/startpage/startpage.component.html\n// module id = ../../../../../src/app/startpage/startpage.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-startpage',\n  templateUrl: './startpage.component.html',\n  styleUrls: ['./startpage.component.css']\n})\nexport class StartpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/startpage/startpage.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    padding:10px;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n    border-radius: 5px;  \\r\\n  }\\r\\n  \\r\\n  .mat-form-field{\\r\\n      width:100%;\\r\\n  }\\r\\n  \\r\\n  .mat-select{\\r\\n    text-align:center;\\r\\n}\\r\\n  \\r\\n  .select_left{\\r\\n  text-align:left;\\r\\n}\\r\\n  \\r\\n  .grid_element{\\r\\n    position: absolute;\\r\\n    left: 5px;\\r\\n    padding:5px;\\r\\n  }\\r\\n  \\r\\n  .mat-select{\\r\\n    font-size:10px;    \\r\\n  }\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/vehicle-prep/vehicle-prep.component.css\n// module id = ../../../../../src/app/vehicle-prep/vehicle-prep.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container>\\n\\n    <mat-toolbar>\\n        <i class=\\\"fa fa-arrow-left\\\" (click)=\\\"backClicked()\\\">  </i>\\n          <span style=\\\"margin-left: 20px; font-family:Arial;\\\">Mva {{MvaNumber}} Vehicle Prep</span> \\n          <span style=\\\"width:100%;text-align:left\\\"></span> \\n          <i class=\\\"fa fa-ellipsis-v\\\" (click)=\\\"sidenav1.toggle();\\\">  </i>  \\n        </mat-toolbar>\\n  \\n        <mat-sidenav  #sidenav1 mode=\\\"over\\\" opened=\\\"false\\\" position=\\\"end\\\"  style=\\\"width:30%; color:rgb(255, 0, 0);\\\">\\n            <div style=\\\"text-align: center;\\\"> <br>\\n             <div> \\n               <button mat-button  routerLink=\\\"/logout\\\" type=\\\"button\\\" class=\\\"btn-block\\\"  (click)=\\\"sidenav1.toggle();logout();\\\">Logout</button><br>\\n             </div>\\n             </div>\\n           </mat-sidenav>\\n      \\n</mat-sidenav-container>\\n\\n<div class=\\\"example-container\\\">\\n<mat-accordion >\\n\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header style=\\\"background: red;\\\">\\n          <mat-panel-title>\\n          <b>Vehicle Details</b>\\n          </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <br>\\n      <mat-form-field>\\n          <mat-select placeholder=\\\"Inspection Type\\\" class=\\\"select_left\\\">\\n              <mat-option *ngFor=\\\"let itype of Itype\\\" [value]=\\\"itype.value\\\">\\n                {{ itype.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n      </mat-form-field>\\n  \\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"MVA\\\" [(ngModel)]=\\\"MvaNumber\\\" disabled>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n          <input matInput placeholder=\\\"Make/Model\\\" disabled style=\\\" font-family:'Times New Roman', Times, serif;\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n            <mat-select placeholder=\\\"Wheels\\\" class=\\\"select_left\\\">\\n                <mat-option *ngFor=\\\"let wheel of Wheels\\\" [value]=\\\"wheel.value\\\">\\n                  {{ wheel.viewValue }}\\n                </mat-option> \\n              </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Wizard Mileage\\\" disabled >\\n          </mat-form-field>\\n\\n          <mat-form-field hintLabel=\\\"Max 9 charaters\\\">\\n            <input type=\\\"text\\\" matInput placeholder=\\\"Actual Mileage\\\" maxlength=\\\"9\\\" >\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Interior\\\" class=\\\"select_left\\\">\\n                <mat-option *ngFor=\\\"let int of Interior\\\" [value]=\\\"int.value\\\">\\n                  {{ int.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field hintLabel=\\\"Please specify in litres\\\">\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Engine Size\\\" >\\n        </mat-form-field><br>\\n\\n        <mat-form-field>\\n          <input type=\\\"date\\\" matInput placeholder=\\\"Date\\\" >\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Last 8 of VIN\\\" disabled >\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Prep City\\\" class=\\\"select_left\\\">\\n              <mat-option *ngFor=\\\"let city of PCity\\\" [value]=\\\"city.value\\\">\\n                {{ city.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n      </mat-form-field>\\n\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:1\\\" >\\n        <mat-grid-tile ><div class=\\\"grid_element\\\" >Recalls Clear?</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n   \\n        <mat-grid-tile><div class=\\\"grid_element\\\">IQ/VR/CC/EZ/ZIP Removed?</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n      </mat-grid-list>\\n    </mat-expansion-panel>\\n<br>\\n\\n<!--          Expansion 2      -->\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header style=\\\"background: red;\\\">\\n          <mat-panel-title>\\n        <b> Drivers Seat/Cockpit</b>\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <br>\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Inspect Left Side & Center Rails</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x1\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x1\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x1\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let dtype of DType\\\" [value]=\\\"dtype.value\\\">\\n                  {{ dtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x1\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Damage Severity  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x1\\\">\\n            <mat-select placeholder=\\\"Select Severity\\\">\\n                <mat-option *ngFor=\\\"let stype of SType\\\" [value]=\\\"stype.value\\\">\\n                  {{ stype.viewValue }}\\n                </mat-option>\\n              </mat-select>        \\n      </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Horn Function </div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Turn Signals</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Wipers good operation </div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Warning Lights on Dashboard Cluster</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x2\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x2\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x2\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d2type of D2Type\\\" [value]=\\\"d2type.value\\\">\\n                  {{ d2type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Visor / Mirror / Interior lamps</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x12\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x12\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x12\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d12type of DT12Type\\\" [value]=\\\"d12type.value\\\">\\n                  {{ d12type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Headliner </div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x3\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x3\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x3\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d3type of D3Type\\\" [value]=\\\"d3type.value\\\">\\n                  {{ d3type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">All Switches - Locks, Mirror </div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Heat / AC Operation </div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">All Knobs / Vents</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x4\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x4\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x4\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d4type of D4Type\\\" [value]=\\\"d4type.value\\\">\\n                  {{ d4type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Radio / Stereo / Speakers</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x5\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x5\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x5\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d5type of D5Type\\\" [value]=\\\"d5type.value\\\">\\n                  {{ d5type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Back Up Camera operation</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x6\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x6\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x6\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d6type of D6Type\\\" [value]=\\\"d6type.value\\\">\\n                  {{ d6type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Power Outlet functioning</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Seats / Power / Manual</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Seatbelts</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x7\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x7\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x7\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let d7type of D7Type\\\" [value]=\\\"d7type.value\\\">\\n                  {{ d7type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Trim - Door / Seat</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x8\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x8\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x8\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let d8type of D8Type\\\" [value]=\\\"d8type.value\\\">\\n                  {{ d8type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Upholstery / Carpet</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x9\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x9\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x9\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let d9type of D9Type\\\" [value]=\\\"d9type.value\\\">\\n                  {{ d9type.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Fuel level</div></mat-grid-tile>\\n        <mat-grid-tile>\\n          <mat-select placeholder=\\\"Select Type\\\">\\n            <mat-option *ngFor=\\\"let d10type of D10Type\\\" [value]=\\\"d10type.value\\\">\\n              {{ d10type.viewValue }}\\n            </mat-option>\\n          </mat-select></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Trunk / Hood / Fuel Release</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Floor Mat Front Set (If equippped)</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x11\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x11\\\"><div class=\\\"grid_element\\\" style=\\\"color:red; font-size:10px;\\\">Did the vehicle come with mats (see ROME sticker)?</div></mat-grid-tile>\\n        <mat-grid-tile *ngIf=\\\"x11\\\"><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n\\n      </mat-grid-list>\\n    </mat-expansion-panel>\\n    <br>\\n\\n<!--    Expansion 3      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n      <b>Left Rear</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br>\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Exterior Door /Mldgs / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x12\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x12\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x12\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT1\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x12\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Severity  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x12\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDS1\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">LR Glass</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x13\\\" ></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x13\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x13\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT3\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Upholstery / Carpet</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x14\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x14\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x14\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT4\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Trim - Door / Seat</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x15\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x15\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x15\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT5\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Seat Belt</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x16\\\" ></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x16\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x16\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT6\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Switches, Window, Lock</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Floor Mats Rear Set (If equippped)</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x17\\\" ></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x17\\\"><div class=\\\"grid_element\\\"  style=\\\"color:red; font-size:10px;\\\"> Did the vehicle come with mats (see ROME sticker)?  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x17\\\"><mat-slide-toggle></mat-slide-toggle> </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Wheel / Cover /Nuts / Caps </div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x18\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x18\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x18\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT7\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x18\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x18\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDS2\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Qtr Pnl - Mldg / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x19\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x19\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x19\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT8\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x19\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x19\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDS3\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Lights</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\">\\n          <mat-form-field>  \\n          <input type=\\\"text\\\" matInput placeholder=\\\"Left Rear Tire Make Model\\\">\\n        </mat-form-field>\\n        </mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\">Left Rear Tire damage</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x20\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x20\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x20\\\">\\n            <mat-select placeholder=\\\"Select Type\\\">\\n                <mat-option *ngFor=\\\"let lr1 of lftRearDT9\\\" [value]=\\\"lr1.value\\\">\\n                  {{ lr1.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n          <input type=\\\"text\\\" matInput placeholder=\\\"Left Rear Tire Thread\\\">\\n        </mat-form-field></mat-grid-tile>\\n\\n      </mat-grid-list>\\n  </mat-expansion-panel>\\n  <br>\\n<!--    Expansion 4      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n     <b>Rear of Vehicle</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br>\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Inspect Rear Undercarriage</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x21\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x21\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x21\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X1Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x21\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x21\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X2Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Inspect Rear Body Panel / Floor</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x22\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x22\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x22\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X3Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x22\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x22\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X4Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Bumper</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x23\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x23\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x23\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X5Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x23\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x23\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X6Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Lights / Lenses</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x24\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x24\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x24\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X7Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x24\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x24\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X8Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Deck Lid / Trunk / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x25\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x25\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x25\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X9Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x25\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x25\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X10Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n     \\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Cargo Net / Privacy Cover / Carpet</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x26\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x26\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x26\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X11Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Spare Tire / Air Kit / Jack / Mat</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Manual-Book (move to RF seat)</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Roof</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x27\\\"></mat-slide-toggle></mat-grid-tile> \\n       \\n        <mat-grid-tile *ngIf=\\\"x27\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x27\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let xtype of X12Type\\\" [value]=\\\"xtype.value\\\">\\n                  {{ xtype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"x27\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"x27\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n              <mat-option *ngFor=\\\"let xtype of X15Type\\\" [value]=\\\"xtype.value\\\">\\n                {{ xtype.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n    </mat-grid-tile>\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Antenna / Gas Cap</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x28\\\"></mat-slide-toggle></mat-grid-tile> \\n     \\n      <mat-grid-tile *ngIf=\\\"x28\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"x28\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n              <mat-option *ngFor=\\\"let xtype of X13Type\\\" [value]=\\\"xtype.value\\\">\\n                {{ xtype.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Back / Hatch Glass</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x29\\\"></mat-slide-toggle></mat-grid-tile> \\n     \\n      <mat-grid-tile *ngIf=\\\"x29\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"x29\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n              <mat-option *ngFor=\\\"let xtype of X14Type\\\" [value]=\\\"xtype.value\\\">\\n                {{ xtype.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >DVD headphones and remote</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile> \\n   \\n\\n    </mat-grid-list>  \\n\\n  </mat-expansion-panel>\\n\\n  <br>\\n\\n<!--          Expansion 5      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n        <b>Right Rear</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br>\\n\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Qtr Pnl - Mldg / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x30\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile *ngIf=\\\"x30\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x30\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y1Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n        <mat-grid-tile *ngIf=\\\"x30\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x30\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y2Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Lights</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x31\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Wheel / Cover / Nuts / Caps</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x32\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x32\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x32\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y3Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n        <mat-grid-tile *ngIf=\\\"x32\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x32\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y4Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n        \\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Exterior Door / Mldgs / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x33\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x33\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x33\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y5Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n        <mat-grid-tile *ngIf=\\\"x33\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x33\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y11Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n      </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >RR Glass</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x34\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x34\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x34\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y6Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Trim - Door, Seat</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x35\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x35\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x35\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y7Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Switches, Window, Lock</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x36\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Seat Belt</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x37\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x37\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x37\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y8Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Upholstery / Carpet</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x38\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x38\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x38\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y9Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Right Rear Tire Make Model\\\">\\n        </mat-form-field></mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Right Rear Tire damage</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"x40\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"x40\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"x40\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let ytype of Y10Type\\\" [value]=\\\"ytype.value\\\">\\n                  {{ ytype.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-grid-tile>\\n\\n        <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Right Rear Tire Thread\\\">\\n        </mat-form-field></mat-grid-tile>\\n      \\n      </mat-grid-list>\\n    \\n  </mat-expansion-panel>\\n  <br>\\n\\n  \\n<!--          Expansion 6      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n      <b>Right Side Front</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br> \\n   <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Inspect Right - Side & Ctr Rails</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF1\\\"></mat-slide-toggle></mat-grid-tile>\\n      \\n      <mat-grid-tile *ngIf=\\\"RSF1\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"RSF1\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n              <mat-option *ngFor=\\\"let rsf of RgtSdeDT1\\\" [value]=\\\"rsf.value\\\">\\n                {{ rsf.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n      </mat-grid-tile>\\n      <mat-grid-tile *ngIf=\\\"RSF1\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"RSF1\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n              <mat-option *ngFor=\\\"let rsf of RgtSdeDS1\\\" [value]=\\\"rsf.value\\\">\\n                {{ rsf.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Undercarriage Front Right</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF2\\\"></mat-slide-toggle></mat-grid-tile>\\n    \\n    <mat-grid-tile *ngIf=\\\"RSF2\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"RSF2\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let rsf of RgtSdeDT2\\\" [value]=\\\"rsf.value\\\">\\n              {{ rsf.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n    </mat-grid-tile>\\n    <mat-grid-tile *ngIf=\\\"RSF2\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"RSF2\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let rsf of RgtSdeDS2\\\" [value]=\\\"rsf.value\\\">\\n              {{ rsf.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n  </mat-grid-tile>\\n  \\n  <mat-grid-tile><div class=\\\"grid_element\\\" >Exterior Door / Mldgs / Body</div></mat-grid-tile>\\n  <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF3\\\"></mat-slide-toggle></mat-grid-tile>\\n  \\n  <mat-grid-tile *ngIf=\\\"RSF3\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n  <mat-grid-tile *ngIf=\\\"RSF3\\\">\\n      <mat-select placeholder=\\\"Specify Type\\\">\\n          <mat-option *ngFor=\\\"let rsf of RgtSdeDT3\\\" [value]=\\\"rsf.value\\\">\\n            {{ rsf.viewValue }}\\n          </mat-option>\\n        </mat-select>\\n  </mat-grid-tile>\\n  <mat-grid-tile *ngIf=\\\"RSF3\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n  <mat-grid-tile *ngIf=\\\"RSF3\\\">\\n      <mat-select placeholder=\\\"Specify Type\\\">\\n          <mat-option *ngFor=\\\"let rsf of RgtSdeDS3\\\" [value]=\\\"rsf.value\\\">\\n            {{ rsf.viewValue }}\\n          </mat-option>\\n        </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >RF Glass</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF4\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF4\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF4\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT4\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >RF Mirror</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF5\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF5\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF5\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT5\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Upholstery / Carpet</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF6\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF6\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF6\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT6\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Trim - Door, Seat</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF7\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF7\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF7\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT7\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Switches, Window, Lock</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Seat Belt</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF8\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF8\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF8\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT8\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Windshield (RF Side)</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF9\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF9\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF9\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT9\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >RF Fender / Mldg / Body</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF10\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF10\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF10\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT10\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF10\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF10\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDS10\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Wheel / Cover / Nuts / Caps</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"RSF11\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF11\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF11\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT11\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF11\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF11\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDS11\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Lights</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n    <input type=\\\"text\\\" matInput placeholder=\\\"Right Front Tire Make Model\\\">\\n</mat-form-field></mat-grid-tile>\\n\\n<mat-grid-tile><div class=\\\"grid_element\\\" >Right Front Tire damage</div></mat-grid-tile>\\n<mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n<mat-grid-tile *ngIf=\\\"RSF12\\\"><div class=\\\"grid_element\\\"   style=\\\"color:red; font-size:10px;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n<mat-grid-tile *ngIf=\\\"RSF12\\\">\\n    <mat-select placeholder=\\\"Specify Type\\\">\\n        <mat-option *ngFor=\\\"let rsf of RgtSdeDT12\\\" [value]=\\\"rsf.value\\\">\\n          {{ rsf.viewValue }}\\n        </mat-option>\\n      </mat-select>\\n</mat-grid-tile>\\n\\n<mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n    <input type=\\\"text\\\" matInput placeholder=\\\"Right Front Tire Thread\\\">\\n  </mat-form-field></mat-grid-tile>\\n  \\n</mat-grid-list>\\n</mat-expansion-panel>\\n<br>\\n\\n<!--          Expansion 7      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n        <b>Front End</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br>\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Headlamps (must work)</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"FE1\\\"></mat-slide-toggle></mat-grid-tile>\\n    \\n    <mat-grid-tile *ngIf=\\\"FE1\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"FE1\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let fe of FrntEndDT1\\\" [value]=\\\"fe.value\\\">\\n              {{ fe.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Turn signals (must work)</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Fog Lamps (must work)</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"FE2\\\" ></mat-slide-toggle></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"FE2\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"FE2\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let fe of FrntEndDT2\\\" [value]=\\\"fe.value\\\">\\n              {{ fe.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Bumper</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"FE3\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"FE3\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"FE3\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let fe of FrntEndDT3\\\" [value]=\\\"fe.value\\\">\\n              {{ fe.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile *ngIf=\\\"FE3\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"FE3\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let fe of FrntEndDS1\\\" [value]=\\\"fe.value\\\">\\n                  {{ fe.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Grille</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"FE4\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"FE4\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"FE4\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let fe of FrntEndDT4\\\" [value]=\\\"fe.value\\\">\\n              {{ fe.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Hood (must operate)</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"FE5\\\"></mat-slide-toggle></mat-grid-tile>\\n\\n    <mat-grid-tile *ngIf=\\\"FE5\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"FE5\\\">\\n        <mat-select placeholder=\\\"Specify Type\\\">\\n            <mat-option *ngFor=\\\"let fe of FrntEndDT5\\\" [value]=\\\"fe.value\\\">\\n              {{ fe.viewValue }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-grid-tile>\\n\\n      <mat-grid-tile *ngIf=\\\"FE5\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"FE5\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let fe of FrntEndDS2\\\" [value]=\\\"fe.value\\\">\\n                  {{ fe.viewValue }}\\n                </mat-option>\\n            </mat-select>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n  </mat-expansion-panel>  \\n  <br>\\n\\n\\n<!--          Expansion 8      -->\\n<mat-expansion-panel>\\n      <mat-expansion-panel-header style=\\\"background: red;\\\">\\n        <mat-panel-title>\\n          <b> Engine Compartment</b>\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <br>\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Oil Level</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Oil Color</div></mat-grid-tile>\\n        <mat-grid-tile><mat-select placeholder=\\\"Select value\\\">\\n          <mat-option *ngFor=\\\"let ec of EngCmpt1\\\" [value]=\\\"ec.value\\\">\\n            {{ ec.viewValue }}\\n          </mat-option></mat-select>\\n        </mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Battery</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Washer Fluid</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >All other Fluid levels at \\\"full\\\" level</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n        <br>\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Emission sticker intact & in good condition</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n  \\n        </mat-grid-list>\\n    </mat-expansion-panel>\\n    <br>\\n\\n\\n<!--          Expansion 9      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n        <b> Left Front</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br>\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\" >\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Undercarriage Front Left</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF1\\\"></mat-slide-toggle></mat-grid-tile>\\n  \\n      <mat-grid-tile *ngIf=\\\"LF1\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"LF1\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n              <mat-option *ngFor=\\\"let lf of LftFrntDT1\\\" [value]=\\\"lf.value\\\">\\n                {{ lf.viewValue }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-grid-tile>\\n  \\n        <mat-grid-tile *ngIf=\\\"LF1\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"LF1\\\">\\n              <mat-select placeholder=\\\"Specify Type\\\">\\n                  <mat-option *ngFor=\\\"let lf of LftFrntDS1\\\" [value]=\\\"lf.value\\\">\\n                    {{ lf.viewValue }}\\n                  </mat-option>\\n            </mat-select>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Examine Sub- Frame</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF2\\\"></mat-slide-toggle></mat-grid-tile>\\n    \\n        <mat-grid-tile *ngIf=\\\"LF2\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"LF2\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                <mat-option *ngFor=\\\"let lf of LftFrntDT2\\\" [value]=\\\"lf.value\\\">\\n                  {{ lf.viewValue }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-grid-tile>\\n    \\n          <mat-grid-tile *ngIf=\\\"LF2\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n          <mat-grid-tile *ngIf=\\\"LF2\\\">\\n                <mat-select placeholder=\\\"Specify Type\\\">\\n                    <mat-option *ngFor=\\\"let lf of LftFrntDS2\\\" [value]=\\\"lf.value\\\">\\n                      {{ lf.viewValue }}\\n                    </mat-option>\\n              </mat-select>\\n          </mat-grid-tile>\\n\\n        <mat-grid-tile><div class=\\\"grid_element\\\" >LF Fender / Mldg / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF3\\\"></mat-slide-toggle></mat-grid-tile>\\n      \\n        <mat-grid-tile *ngIf=\\\"LF3\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"LF3\\\">\\n              <mat-select placeholder=\\\"Specify Type\\\">\\n                  <mat-option *ngFor=\\\"let lf of LftFrntDT3\\\" [value]=\\\"lf.value\\\">\\n                    {{ lf.viewValue }}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-grid-tile>\\n      \\n          <mat-grid-tile *ngIf=\\\"LF3\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n          <mat-grid-tile *ngIf=\\\"LF3\\\">\\n                  <mat-select placeholder=\\\"Specify Type\\\">\\n                      <mat-option *ngFor=\\\"let lf of LftFrntDS3\\\" [value]=\\\"lf.value\\\">\\n                        {{ lf.viewValue }}\\n                      </mat-option>\\n              </mat-select>\\n          </mat-grid-tile>\\n\\n          <mat-grid-tile><div class=\\\"grid_element\\\" >LF Glass</div></mat-grid-tile>\\n          <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF4\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n          <mat-grid-tile *ngIf=\\\"LF4\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n          <mat-grid-tile *ngIf=\\\"LF4\\\">\\n                <mat-select placeholder=\\\"Specify Type\\\">\\n                    <mat-option *ngFor=\\\"let lf of LftFrntDT4\\\" [value]=\\\"lf.value\\\">\\n                      {{ lf.viewValue }}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >LF Mirror</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF5\\\"></mat-slide-toggle></mat-grid-tile>\\n              \\n        <mat-grid-tile *ngIf=\\\"LF5\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"LF5\\\">\\n                  <mat-select placeholder=\\\"Specify Type\\\">\\n                      <mat-option *ngFor=\\\"let lf of LftFrntDT5\\\" [value]=\\\"lf.value\\\">\\n                          {{ lf.viewValue }}\\n                      </mat-option>\\n                </mat-select>\\n        </mat-grid-tile>\\n        \\n        <mat-grid-tile><div class=\\\"grid_element\\\" >Exterior Door / Mldgs / Body</div></mat-grid-tile>\\n        <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF6\\\"></mat-slide-toggle></mat-grid-tile>\\n      \\n        <mat-grid-tile *ngIf=\\\"LF6\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n        <mat-grid-tile *ngIf=\\\"LF6\\\">\\n              <mat-select placeholder=\\\"Specify Type\\\">\\n                  <mat-option *ngFor=\\\"let lf of LftFrntDT6\\\" [value]=\\\"lf.value\\\">\\n                    {{ lf.viewValue }}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-grid-tile>\\n      \\n          <mat-grid-tile *ngIf=\\\"LF6\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n          <mat-grid-tile *ngIf=\\\"LF6\\\">\\n                  <mat-select placeholder=\\\"Specify Type\\\">\\n                      <mat-option *ngFor=\\\"let lf of LftFrntDS6\\\" [value]=\\\"lf.value\\\">\\n                    {{ lf.viewValue }}\\n                      </mat-option>\\n              </mat-select>\\n          </mat-grid-tile>                        \\n\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Wheel / Cover / Nuts / Caps</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF7\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n      <mat-grid-tile *ngIf=\\\"LF7\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"LF7\\\">\\n                <mat-select placeholder=\\\"Specify Type\\\">\\n                    <mat-option *ngFor=\\\"let lf of LftFrntDT7\\\" [value]=\\\"lf.value\\\">\\n                      {{ lf.viewValue }}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-grid-tile>\\n        \\n      <mat-grid-tile *ngIf=\\\"LF7\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Severity Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"LF7\\\">\\n              <mat-select placeholder=\\\"Specify Type\\\">\\n                    <mat-option *ngFor=\\\"let lf of LftFrntDS7\\\" [value]=\\\"lf.value\\\">\\n                      {{ lf.viewValue }}\\n              </mat-option>\\n          </mat-select>\\n      </mat-grid-tile> \\n      \\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Windshield (LF Side)</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF8\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n      <mat-grid-tile *ngIf=\\\"LF8\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n      <mat-grid-tile *ngIf=\\\"LF8\\\">\\n            <mat-select placeholder=\\\"Specify Type\\\">\\n                    <mat-option *ngFor=\\\"let lf of LftFrntDT8\\\" [value]=\\\"lf.value\\\">\\n                      {{ lf.viewValue }}\\n                   </mat-option>\\n            </mat-select>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile><div class=\\\"grid_element\\\" >Keys (TB = 2 sets)</div></mat-grid-tile>\\n      <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF9\\\"></mat-slide-toggle></mat-grid-tile>\\n        \\n      <mat-grid-tile *ngIf=\\\"LF9\\\"><div class=\\\"grid_element\\\" >Second key requested</div></mat-grid-tile>\\n      <mat-grid-tile *ngIf=\\\"LF9\\\"><mat-slide-toggle [(ngModel)]=\\\"LF10\\\"></mat-slide-toggle></mat-grid-tile>\\n       \\n      <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\" *ngIf=\\\"LF10\\\">\\n      <mat-form-field><input type=\\\"date\\\" matInput placeholder=\\\"Date\\\" ></mat-form-field>\\n      </mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Remotes (TB, Retail = 2 sets)</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Left Front Tire Make Model\\\">\\n      </mat-form-field></mat-grid-tile>\\n\\n    <mat-grid-tile><div class=\\\"grid_element\\\" >Left Front Tire damage</div></mat-grid-tile>\\n    <mat-grid-tile><mat-slide-toggle [(ngModel)]=\\\"LF11\\\"></mat-slide-toggle></mat-grid-tile>\\n    \\n    <mat-grid-tile *ngIf=\\\"LF11\\\"><div class=\\\"grid_element\\\" style=\\\"color:red;\\\"> Specify Damage Type  </div></mat-grid-tile>        \\n    <mat-grid-tile *ngIf=\\\"LF11\\\">\\n          <mat-select placeholder=\\\"Specify Type\\\">\\n                  <mat-option *ngFor=\\\"let lf of LftFrntDT11\\\" [value]=\\\"lf.value\\\">\\n                    {{ lf.viewValue }}\\n                 </mat-option>\\n          </mat-select>\\n    </mat-grid-tile>\\n\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"2\\\"> <mat-form-field>  \\n        <input type=\\\"text\\\" matInput placeholder=\\\" Left Front Tire Thread\\\">\\n      </mat-form-field></mat-grid-tile>\\n \\n    </mat-grid-list>\\n  </mat-expansion-panel>    \\n  <br>\\n\\n\\n<!--          Expansion 10      -->\\n<mat-expansion-panel>\\n    <mat-expansion-panel-header style=\\\"background: red;\\\">\\n      <mat-panel-title>\\n        <b>Chargable Damage</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n    <br>\\n    <div class=\\\"grid_element\\\" style=\\\"padding-left:38px;\\\"><b>Ford</b> has turnback allowances upto <b>$500</b> deductible<span style=\\\"margin-left:4px;\\\"></span><i class=\\\"fa fa-info\\\"> </i> </div>\\n    <br><br><hr><br>\\n      <div style=\\\"text-align: center;\\\"><b>Panel/Issues</b></div>\\n      \\n    <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"5:6\\\">\\n        <mat-grid-tile><div class=\\\"grid_element\\\">ABG Ramp Amt $$</div></mat-grid-tile>\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Repair No or Yes</div></mat-grid-tile>\\n        <mat-grid-tile><div class=\\\"grid_element\\\">ABG <br>Cost of Repair $$</div></mat-grid-tile>\\n        <mat-grid-tile><div class=\\\"grid_element\\\">Remaining Damage on MVA $$</div></mat-grid-tile>\\n    </mat-grid-list>\\n<hr>\\n    <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"5:3\\\">\\n    <!--    <mat-grid-tile colspan=\\\"2\\\"><div class=\\\"grid_element\\\">Drivers Seat/Cockpit</div></mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"2\\\"><div class=\\\"grid_element\\\"><i class=\\\"fa fa-bullseye\\\"> </i> Turn Signals</div></mat-grid-tile>\\n    -->\\n    <div style=\\\"text-align: center;\\\"><b>Drivers Seat/Cockpit - Turn Signals</b></div>\\n\\n        <mat-grid-tile><mat-form-field>  \\n            <input matInput placeholder=\\\"0\\\" style=\\\"width:80%;\\\">\\n          </mat-form-field></mat-grid-tile>\\n\\n        <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n\\n        <mat-grid-tile><mat-form-field>  \\n            <input matInput placeholder=\\\"0\\\" style=\\\"width:50%;\\\">\\n          </mat-form-field></mat-grid-tile>\\n\\n        <mat-grid-tile><mat-form-field>  \\n            <input matInput placeholder=\\\"0\\\">\\n          </mat-form-field></mat-grid-tile>\\n<!--                                      -->    \\n  <mat-grid-tile colspan=\\\"4\\\"><div style=\\\"text-align: center;\\\"><b>Left Rear Tire Damage - Puncture</b></div></mat-grid-tile>\\n       \\n          <mat-grid-tile><mat-form-field>  \\n              <input matInput placeholder=\\\"0\\\">\\n            </mat-form-field></mat-grid-tile>\\n  \\n          <mat-grid-tile><mat-slide-toggle></mat-slide-toggle></mat-grid-tile>\\n  \\n          <mat-grid-tile><mat-form-field>  \\n              <input matInput placeholder=\\\"0\\\">\\n            </mat-form-field></mat-grid-tile>\\n  \\n          <mat-grid-tile><mat-form-field>  \\n              <input matInput placeholder=\\\"0\\\">\\n            </mat-form-field></mat-grid-tile>\\n    \\n    </mat-grid-list>\\n\\n\\n    <br>\\n      <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Total Existing Condition/Ramp Amount\\\" style=\\\"font-size:25px;\\\" disabled [(ngModel)]=\\\"valuexyz\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Prepped Condition\\\" style=\\\"font-size:25px;\\\" disabled [(ngModel)]=\\\"valueabc\\\">\\n      </mat-form-field>\\n\\n    </mat-expansion-panel>\\n  <br>\\n\\n  </mat-accordion>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/vehicle-prep/vehicle-prep.component.html\n// module id = ../../../../../src/app/vehicle-prep/vehicle-prep.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n  selector: 'app-vehicle-prep',\n  templateUrl: './vehicle-prep.component.html',\n  styleUrls: ['./vehicle-prep.component.css']\n})\nexport class VehiclePrepComponent implements OnInit {\n  panelOpenState: boolean = false;\n  toggle:boolean=false;\n  MvaNumber:string='44762894';\n  valuexyz:string=\"$600\";\n  valueabc:string=\"$300\";\n \n  \n  constructor(private loc:Location,public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  backClicked()\n  {\n    this.loc.back();\n  }\n  logout() {\n    \n    this.openSnackBar(\"Session Over\",\"Logged Out\");\n  }\n  openSnackBar(message: string, action: string){\n      this.snackBar.open(message, action, {\n        duration: 2000,\n      });\n    }\n\n  Itype = [\n    {value: 'TB', viewValue: 'Turnback'},\n    {value: 'WS', viewValue: 'Wholesale'},\n    {value: 'UTD', viewValue: 'Ultimate Test Drive'}\n  ];\n\n\n  Wheels = [\n    {value: 'ALY', viewValue: 'Alloy'},\n    {value: 'STL', viewValue: 'Steel'},\n  ];\n\n\n  Interior = [\n    {value: 'CLT', viewValue: 'Cloth'},\n    {value: 'VIN', viewValue: 'Vinyl'},\n    {value: 'LTH', viewValue: 'Leather'}\n  ];\n\n  PCity = [\n    {value: 'MCO', viewValue: 'MCO'},\n    {value: 'EWR', viewValue: 'EWR'}\n  ];\n\n\n  // Door seat Cockpit \n  DType = [\n    {value: 'Dent', viewValue: 'Dent'},\n    {value: 'Scratch', viewValue: 'Scratch'},\n    {value: 'Crease', viewValue: 'Crease'},\n    {value: 'Gouge', viewValue: 'Gouge'},\n    {value: 'Tear', viewValue: 'Tear'},\n    {value: 'Chip', viewValue: 'Chip'},\n  ];\n\n  SType = [\n    {value: '<1', viewValue: '<1'},\n    {value: '1-4', viewValue: '1-4'},\n    {value: '4-8', viewValue: '4-8'},\n    {value: '>8', viewValue: '>8'}\n  ];\n\n  D2Type = [\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'}\n  ];\n\n  D3Type = [\n    {value: 'Cut', viewValue: 'Cut'},\n    {value: 'Torn', viewValue: 'Torn'},\n    {value: 'Burn < 1/4\"', viewValue: 'Burn < 1/4\"'},\n    {value: 'Burn > 1/4\"', viewValue: 'Burn > 1/4\"'}\n  ];\n\n  D4Type = [\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  D5Type = [\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  D6Type = [\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  D7Type = [\n    {value: 'Cut', viewValue: 'Cut'},\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  D8Type = [\n    {value: 'Loose', viewValue: 'loose'},\n    {value: 'Cut', viewValue: 'Cut'},\n    {value: 'Torn', viewValue: 'Torn'},\n    {value: 'Burn < 1/4\"', viewValue: 'Burn < 1/4\"'},\n    {value: 'Burn > 1/4\"', viewValue: 'Burn > 1/4\"'}\n  ];\n\n  D9Type = [\n    {value: 'Loose', viewValue: 'loose'},\n    {value: 'Cut', viewValue: 'Cut'},\n    {value: 'Torn', viewValue: 'Torn'},\n    {value: 'Burn < 1/4\"', viewValue: 'Burn < 1/4\"'},\n    {value: 'Burn > 1/4\"', viewValue: 'Burn > 1/4\"'}\n  ];\n\n  D10Type = [\n    {value: 'E', viewValue: 'E'},\n    {value: '1/8', viewValue: '1/8'},\n    {value: '1/4', viewValue: '1/4'},\n    {value: '3/8', viewValue: '3/8'},\n    {value: '1/2', viewValue: '1/2'},\n    {value: '5/8', viewValue: '5/8'},\n    {value: '3/4', viewValue: '3/4'},\n    {value: '7/8', viewValue: '7/8'},\n    {value: 'F', viewValue: 'F'},\n\n  ];\n  \n  DT12Type = [\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n  // Left Rear \n  lftRearDT1 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'chip',viewValue:'chip'}\n  ];\n\n  lftRearDS1 = [\n    {value:'< 1\"',viewValue:'< 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:' >8\"'}\n  ];\n\n  lftRearDT3 = [\n    {value:'Scratch\"',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Aftermarket',viewValue:'Aftermarket'},\n    {value:'Molding damage',viewValue:'Molding damage'}\n  ];\n  \n  lftRearDT4 = [\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Torn',viewValue:'Torn'},\n    {value:'Burn < 1/4\"',viewValue:'Burn < 1/4\"'},\n    {value:'Burn > 1/4\"',viewValue:'Burn > 1/4\"'}\n  ];\n  \n  lftRearDT5 = [\n    {value:'Loose',viewValue:'Loose'},\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Torn',viewValue:'Torn'},\n    {value:'Burn < 1/4\"',viewValue:'Burn < 1/4\"'},\n    {value:'Burn > 1/4\"',viewValue:'Burn > 1/4\"'}\n  ];\n \n  lftRearDT6 = [\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Broken',viewValue:'Broken'},\n    {value:'Inoperative',viewValue:'Inoperative'},\n    {value:'Missing',viewValue:'Missing'}\n  ];\n\n  lftRearDT7 = [\n  {value:'Scratch',viewValue:'Scratch'},\n  {value:'Gouge',viewValue:'Gouge'},\n  {value:'Bent',viewValue:'Bent'}\n  ];\n\n  lftRearDS2 = [\n  {value:'< 2\"',viewValue:' < 2\"'},\n  {value:'2-4\"',viewValue:'2-4\"'},\n  {value:'4-8\"',viewValue:'4-8\"'},\n  {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  lftRearDT8 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'chip',viewValue:'chip'}\n  ];\n\n  lftRearDS3 = [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n   ];\n\n  lftRearDT9 = [\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Puncture',viewValue:'Puncture'},\n    {value:'Buldge',viewValue:'Buldge'},\n    {value:'Wear Pattern',viewValue:'Wear Pattern'}\n   ];\n\n   X1Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n   ];\n\n\n   X2Type = [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n   ];\n\n   X3Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n   ];\n\n   X4Type = [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n     ];\n\n   X5Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n   \n  X6Type=[\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  X7Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n   \n  X8Type=[\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  X9Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n   \n  X10Type=[\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  X11Type=[\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Torn', viewValue: 'Torn'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  X12Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n\n\n  X13Type = [\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  X14Type = [\n    {value:'Scratch\"',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Aftermarket',viewValue:'Aftermarket'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n\n  X15Type = [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ]\n\n  Y1Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n\n  Y2Type=[\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n\n  Y3Type=[\n    {value:'Bent',viewValue:'Bent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'}\n  ];\n\n  Y4Type=[\n    {value:'< 2\"',viewValue:' < 2\"'},\n    {value:'2-4\"',viewValue:'2-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  Y5Type = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n\n  Y6Type = [\n    {value:'Scratch\"',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Chip',viewValue:'Chip'},\n    {value:'Aftermarket',viewValue:'Aftermarket'},\n    {value:'Molding damage',viewValue:'Molding damage'}\n  ];\n\n  Y7Type = [\n    {value:'Loose',viewValue:'Loose'},\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Torn',viewValue:'Torn'},\n    {value:'Burn < 1/4\"',viewValue:'Burn < 1/4\"'},\n    {value:'Burn > 1/4\"',viewValue:'Burn > 1/4\"'}\n  ];\n\n  Y8Type=[\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Cut', viewValue: 'Cut'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  Y9Type = [\n    {value:'Loose',viewValue:'Loose'},\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Torn',viewValue:'Torn'},\n    {value:'Burn < 1/4\"',viewValue:'Burn < 1/4\"'},\n    {value:'Burn > 1/4\"',viewValue:'Burn > 1/4\"'}\n  ];\n\n  Y10Type = [\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Puncture',viewValue:'Puncture'},\n    {value:'Buldge',viewValue:'Buldge'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Wear Pattern',viewValue:'Wear Pattern'}\n  ];\n\n  Y11Type = [ \n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  FrntEndDT1 =[\n    {value:'Moisture inside',viewValue:'Moisture inside'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Broken',viewValue:'Broken'},\n    {value:'Inoperative',viewValue:'Inoperative'},\n     ];\n\n  FrntEndDT2=[\n    {value:'Moisture inside',viewValue:'Moisture inside'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Broken',viewValue:'Broken'},\n    {value:'Inoperative',viewValue:'Inoperative'},\n\n  ];\n\n  FrntEndDT3=[\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'chips',viewValue:'chips'},\n  ];\n\n  FrntEndDS1=[\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  \n  ];\n\n  FrntEndDT4=[\n    {value:'Cracked',viewValue:'Cracked'},\n    {value:'Loose',viewValue:'Loose'}\n  ];\n\n  FrntEndDT5=[\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  FrntEndDS2= [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  EngCmpt1 =[\n    {value:'CLE',viewValue:'CLE'},\n    {value:'BRO',viewValue:'BRO'},\n    {value:'BLA',viewValue:'BLA'}\n  ];\n  \n  LftFrntDT1 =[\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  LftFrntDS1 = [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  LftFrntDT2 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  LftFrntDS2 = [\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  LftFrntDT3 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  LftFrntDS3 =[\n    {value:'< 1\"',viewValue:' < 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  LftFrntDT4 = [\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Chip',viewValue:'Chip'},\n    {value:'Aftermarket',viewValue:'Aftermarket'},\n    {value:'Molding damage',viewValue:'Molding damage'},\n  ];\n\n  LftFrntDT5 = [\n    {value:'Bent',viewValue:'Bent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Color mismatch',viewValue:'Color mismatch'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n  \n  LftFrntDT6 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  LftFrntDS6 =[\n    {value:'< 1\"',viewValue:'< 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  LftFrntDT7=[\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Bent',viewValue:'Bent'},\n  ];\n\n  LftFrntDS7 =[\n    {value:'< 2\"',viewValue:'< 2\"'},\n    {value:'2-4\"',viewValue:'2-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  LftFrntDT8 =[\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Chip',viewValue:'Chip'},\n    {value:'Aftermarket',viewValue:'Aftermarket'}\n  ]\n\n  LftFrntDT11 =[\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Puncture',viewValue:'Puncture'},\n    {value:'Buldge',viewValue:'Buldge'},\n    {value:'Wear Pattern',viewValue:'Wear Pattern'},\n  ];\n\n  RgtSdeDT1 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  RgtSdeDS1 =[ \n    {value:'< 1\"',viewValue:'< 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  RgtSdeDT2 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  RgtSdeDS2 =[ \n    {value:'< 1\"',viewValue:'< 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  RgtSdeDT3 = [\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  RgtSdeDS3 =[ \n    {value:'< 1\"',viewValue:'< 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  RgtSdeDT4 =[\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Chip',viewValue:'Chip'},\n    {value:'Aftermarket',viewValue:'Aftermarket'},\n    {value:'Molding damage',viewValue:'Molding damage'},\n  ];\n\n  RgtSdeDT5 =[\n    {value:'Bent',viewValue:'Bent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Color mismatch',viewValue:'Color mismatch'},\n    {value:'Chip',viewValue:'Chip'}\n  ];\n\n  RgtSdeDT6 =[\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Torn',viewValue:'Torn'},\n    {value:'Burn < 1/4\"',viewValue:'Burn < 1/4\"'},\n    {value:'Burn > 1/4\"',viewValue:'Burn > 1/4\"'}\n  ];\n\n  RgtSdeDT7 = [\n    {value:'Loose',viewValue:'Loose'},\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Torn',viewValue:'Torn'},\n    {value:'Burn < 1/4\"',viewValue:'Burn < 1/4\"'},\n    {value:'Burn > 1/4\"',viewValue:'Burn > 1/4\"'}\n  ];\n\n  RgtSdeDT8=[\n    {value: 'Broken', viewValue: 'Broken'},\n    {value: 'Cut', viewValue: 'Cut'},\n    {value: 'Inoperative', viewValue: 'Inoperative'},\n    {value: 'Missing', viewValue: 'Missing'}\n  ];\n\n  RgtSdeDT9=[\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crack',viewValue:'Crack'},\n    {value:'Chip',viewValue:'Chip'},\n    {value:'Aftermarket',viewValue:'Aftermarket'}\n  ];\n\n  RgtSdeDT10=[\n    {value:'Dent',viewValue:'Dent'},\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Crease',viewValue:'Crease'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Tear',viewValue:'Tear'},\n    {value:'Chips',viewValue:'Chips'}\n  ];\n\n  RgtSdeDS10 =[\n    {value:'< 1\"',viewValue:'< 1\"'},\n    {value:'1-4\"',viewValue:'1-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  RgtSdeDT11 =[\n    {value:'Scratch',viewValue:'Scratch'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Bent',viewValue:'Bent'},\n  ];\n\n  RgtSdeDS11 =[\n    {value:'< 2\"',viewValue:'< 2\"'},\n    {value:'2-4\"',viewValue:'2-4\"'},\n    {value:'4-8\"',viewValue:'4-8\"'},\n    {value:'>8\"',viewValue:'>8\"'}\n  ];\n\n  RgtSdeDT12 =[\n    {value:'Cut',viewValue:'Cut'},\n    {value:'Puncture',viewValue:'Puncture'},\n    {value:'Buldge',viewValue:'Buldge'},\n    {value:'Gouge',viewValue:'Gouge'},\n    {value:'Wear Pattern',viewValue:'Wear Pattern'}\n  ];\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/app/vehicle-prep/vehicle-prep.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Personal/Supriya/workspace/DelPrepApp/src/main.ts"],"sourceRoot":"webpack:///"}